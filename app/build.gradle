plugins {
    id 'com.android.application'
}

android {
    compileSdk 31
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
//            minifyEnabled true
//            crunchPngs true
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }

    defaultConfig {
        applicationId "com.assignmentss.safehouse"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    buildFeatures{
        viewBinding true
        dataBinding true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions "pack"
    productFlavors {
        //flavour for development
        development {
            dimension "pack"
            getProps('./config/development.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
            applicationId 'com.assignmentss.safehouse.debug'
        }

        //flavour for production
        production {
            dimension "pack"
            getProps('./config/production.props').each { p ->
                buildConfigField 'String', p.key, p.value
            }
            applicationId 'com.assignmentss.safehouse.release'
//            signingConfig signingConfigs.productionRelease
        }
    }
}

def getProps(path) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(path)))
    return props
}

//To restrict developer to generate release build using Development URL
android.variantFilter { variant ->
    if (variant.buildType.name == 'release'
            && variant.getFlavors().get(0).name == 'development') {
        variant.setIgnore(true)
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.4.0"
    implementation "android.arch.lifecycle:extensions:1.1.1"


    //Retrofit and GSON converter
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'


    //coil lib
    implementation("io.coil-kt:coil:1.4.0")

    //timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'


}